#include "Commands.hpp"

void pony()
{
    std::cout << "     \x1b[38;5;221m▄▄\x1b[48;5;221;38;5;229m▄▄▄▄▄\x1b[49;38;5;221m▄▄▄\x1b[39m                                  \x1b[00m" << std::endl;
    std::cout << "   \x1b[38;5;221m▄\x1b[48;5;221;38;5;229m▄\x1b[48;5;229m█\x1b[38;5;221m▄\x1b[38;5;229m████████\x1b[48;5;221m▄▄▄\x1b[49;38;5;103m▄\x1b[48;5;103;38;5;252m▄\x1b[49;38;5;103m▄\x1b[39m                            \x1b[00m" << std::endl;
    std::cout << "  \x1b[48;5;221;38;5;221m█\x1b[49m▀\x1b[48;5;221m█\x1b[38;5;229m▄\x1b[48;5;229m███████████\x1b[48;5;103;38;5;103m█\x1b[48;5;252;38;5;252m█\x1b[38;5;146m▄\x1b[48;5;103;38;5;252m▄\x1b[49;38;5;103m▄\x1b[39m                           \x1b[00m" << std::endl;
    std::cout << "   \x1b[48;5;221;38;5;221m█\x1b[48;5;229;38;5;229m██\x1b[38;5;221m▄▄▄▄▄\x1b[48;5;221;38;5;252m▄\x1b[38;5;221m█\x1b[38;5;229m▄\x1b[48;5;229m██\x1b[38;5;221m▄\x1b[48;5;103;38;5;252m▄\x1b[48;5;252m█\x1b[48;5;103;38;5;103m█\x1b[48;5;252;38;5;252m█\x1b[48;5;103;38;5;103m█\x1b[49;38;5;221m▄\x1b[39m   \x1b[48;5;103;38;5;103m█\x1b[38;5;252m▄\x1b[38;5;103m█\x1b[49;39m \x1b[38;5;103m▄▄\x1b[39m                 \x1b[00m" << std::endl;
    std::cout << "  \x1b[48;5;221;38;5;221m█\x1b[48;5;229;38;5;229m█\x1b[38;5;221m▄\x1b[49m▀\x1b[39m  \x1b[48;5;103;38;5;103m█\x1b[48;5;252;38;5;252m██\x1b[48;5;221m▄▄▄▄▄\x1b[48;5;252m███\x1b[48;5;103m▄\x1b[48;5;252m█\x1b[48;5;103;38;5;103m█\x1b[48;5;221;38;5;221m█\x1b[49;39m  \x1b[48;5;103;38;5;103m█\x1b[48;5;252;38;5;252m██\x1b[48;5;103;38;5;103m█\x1b[38;5;252m▄\x1b[48;5;252m█\x1b[48;5;103;38;5;103m█\x1b[49;39m                 \x1b[00m" << std::endl;
    std::cout << "  \x1b[48;5;221;38;5;221m██\x1b[49;39m   \x1b[48;5;103;38;5;103m█\x1b[48;5;252;38;5;252m███\x1b[48;5;103;38;5;16m▄\x1b[48;5;16;38;5;252m▄▄\x1b[38;5;146m▄\x1b[48;5;146;38;5;16m▄\x1b[48;5;16;38;5;252m▄\x1b[48;5;252m███\x1b[38;5;221m▄\x1b[48;5;229;38;5;229m█\x1b[48;5;221;38;5;221m█\x1b[49;39m  \x1b[48;5;103;38;5;103m█\x1b[48;5;252;38;5;252m██\x1b[48;5;103;38;5;103m█\x1b[48;5;252;38;5;252m█\x1b[38;5;103m▄\x1b[49m▀\x1b[39m                 \x1b[00m" << std::endl;
    std::cout << "  \x1b[38;5;221m▀\x1b[39m    \x1b[48;5;103;38;5;103m█\x1b[48;5;252;38;5;252m██\x1b[48;5;16;38;5;16m█\x1b[48;5;146;38;5;252m▄\x1b[48;5;252m███\x1b[48;5;16;38;5;16m█\x1b[38;5;103m▄\x1b[38;5;252m▄\x1b[48;5;252m██\x1b[48;5;221;38;5;221m█\x1b[48;5;229;38;5;229m█\x1b[48;5;221;38;5;221m█\x1b[49;38;5;103m▄\x1b[48;5;103m█\x1b[48;5;252;38;5;252m██\x1b[48;5;103;38;5;103m█\x1b[48;5;252;38;5;252m█\x1b[38;5;103m▄\x1b[48;5;103;38;5;252m▄\x1b[49;38;5;103m▄▄\x1b[39m                \x1b[00m" << std::endl;
    std::cout << "      \x1b[38;5;103m▄\x1b[48;5;103m█\x1b[48;5;252;38;5;252m██\x1b[48;5;16;38;5;16m█\x1b[48;5;252;38;5;252m████\x1b[48;5;103m▄\x1b[48;5;252m███\x1b[48;5;221;38;5;221m█\x1b[48;5;229;38;5;229m█\x1b[38;5;221m▄\x1b[48;5;221;38;5;103m▄\x1b[48;5;146;38;5;146m█\x1b[48;5;103;38;5;103m█\x1b[48;5;252m▄\x1b[48;5;103m█\x1b[48;5;252;38;5;252m██\x1b[48;5;103;38;5;103m█\x1b[48;5;252;38;5;252m██\x1b[48;5;103;38;5;103m█\x1b[49;39m                \x1b[00m" << std::endl;
    std::cout << "      \x1b[48;5;103;38;5;103m█\x1b[48;5;252;38;5;252m█\x1b[48;5;146;38;5;103m▄\x1b[48;5;252;38;5;252m█████████\x1b[48;5;221;38;5;221m█\x1b[48;5;229;38;5;229m██\x1b[48;5;221;38;5;221m█\x1b[48;5;103;38;5;146m▄\x1b[48;5;146;38;5;103m▄\x1b[48;5;103m█\x1b[48;5;252;38;5;252m█\x1b[48;5;103;38;5;103m█\x1b[38;5;252m▄\x1b[38;5;103m█\x1b[48;5;252;38;5;252m██\x1b[48;5;103;38;5;103m█\x1b[48;5;221;38;5;229m▄▄▄▄▄\x1b[49;38;5;221m▄▄\x1b[39m          \x1b[00m" << std::endl;
    std::cout << "       \x1b[38;5;103m▀▀\x1b[48;5;252m▄▄▄▄▄▄\x1b[38;5;252m██\x1b[48;5;221;38;5;221m█\x1b[48;5;229;38;5;229m█\x1b[38;5;221m▄\x1b[38;5;229m█\x1b[48;5;221;38;5;221m█\x1b[48;5;146;38;5;146m█\x1b[38;5;103m▄\x1b[48;5;103m█\x1b[48;5;252;38;5;252m█\x1b[48;5;103m▄\x1b[48;5;252m█\x1b[38;5;103m▄\x1b[48;5;103m█\x1b[38;5;229m▄\x1b[48;5;229m████████\x1b[48;5;221;38;5;221m█\x1b[49;39m         \x1b[00m" << std::endl;
    std::cout << "               \x1b[48;5;103;38;5;103m█\x1b[48;5;221;38;5;221m█\x1b[48;5;229m▄\x1b[48;5;221m█\x1b[48;5;229;38;5;229m███\x1b[48;5;221;38;5;221m█\x1b[48;5;146;38;5;103m▄\x1b[48;5;103m█\x1b[48;5;252;38;5;252m█\x1b[48;5;103m▄\x1b[48;5;252m█\x1b[48;5;103;38;5;103m█\x1b[48;5;252m▄\x1b[49;38;5;221m▀▀\x1b[48;5;229m▄\x1b[38;5;229m███████\x1b[48;5;221m▄\x1b[49;38;5;221m▄\x1b[39m       \x1b[00m" << std::endl;
    std::cout << "               \x1b[48;5;103;38;5;103m█\x1b[48;5;221;38;5;252m▄\x1b[48;5;252m█\x1b[48;5;221;38;5;221m█\x1b[48;5;229m▄\x1b[48;5;221;38;5;252m▄\x1b[48;5;229;38;5;221m▄\x1b[48;5;221m█\x1b[48;5;103;38;5;234m▄\x1b[48;5;252m▄▄▄\x1b[48;5;103m▄▄\x1b[48;5;252m▄\x1b[48;5;103m▄\x1b[49m▄\x1b[48;5;221;38;5;146m▄\x1b[48;5;229m▄\x1b[38;5;229m█████\x1b[48;5;221m▄\x1b[48;5;229;38;5;221m▄▄\x1b[48;5;221m█\x1b[49;39m      \x1b[00m" << std::endl;
    std::cout << "               \x1b[38;5;103m▀\x1b[48;5;252m▄\x1b[38;5;252m██\x1b[48;5;221m▄▄\x1b[48;5;146;38;5;146m█\x1b[48;5;221;38;5;231m▄\x1b[48;5;234;38;5;234m█\x1b[48;5;237;38;5;237m█\x1b[48;5;234m▄\x1b[48;5;237;38;5;234m▄\x1b[38;5;237m██\x1b[48;5;234m▄\x1b[48;5;237;38;5;234m▄\x1b[38;5;237m█\x1b[48;5;234;38;5;234m█\x1b[48;5;146;38;5;146m█\x1b[48;5;229;38;5;221m▄\x1b[38;5;229m█████\x1b[48;5;221;38;5;221m█\x1b[49;39m \x1b[38;5;221m▀\x1b[39m      \x1b[00m" << std::endl;
    std::cout << "              \x1b[38;5;103m▄▄\x1b[48;5;103m█\x1b[48;5;252m▄▄▄\x1b[38;5;252m██\x1b[48;5;146m▄\x1b[48;5;234;38;5;234m█\x1b[48;5;237m▄\x1b[38;5;237m█\x1b[48;5;234;38;5;234m█\x1b[48;5;237;38;5;237m███\x1b[48;5;234;38;5;234m█\x1b[48;5;237;38;5;237m█\x1b[48;5;234m▄\x1b[48;5;229;38;5;234m▄\x1b[48;5;221;38;5;221m█\x1b[48;5;229;38;5;229m██████\x1b[48;5;221m▄\x1b[49;38;5;221m▄\x1b[39m      \x1b[00m" << std::endl;
    std::cout << "            \x1b[48;5;103;38;5;103m█\x1b[38;5;146m▄\x1b[38;5;103m█\x1b[38;5;252m▄\x1b[48;5;252m█████\x1b[48;5;103;38;5;103m█\x1b[48;5;252m▄\x1b[48;5;234;38;5;234m█\x1b[38;5;237m▄\x1b[48;5;237;38;5;234m▄\x1b[38;5;237m█\x1b[48;5;234;38;5;234m█\x1b[48;5;237;38;5;237m███\x1b[48;5;234;38;5;234m█\x1b[48;5;237;38;5;237m█\x1b[48;5;234;38;5;234m█\x1b[49;39m \x1b[38;5;221m▀\x1b[48;5;229m▄\x1b[38;5;229m██████\x1b[48;5;221m▄\x1b[49;38;5;221m▄▄\x1b[39m   \x1b[00m" << std::endl;
    std::cout << "            \x1b[48;5;103;38;5;103m█\x1b[48;5;146;38;5;146m█\x1b[48;5;103;38;5;103m█\x1b[48;5;252;38;5;252m██\x1b[48;5;103m▄\x1b[38;5;103m█\x1b[49m▀▀▀\x1b[39m \x1b[38;5;234m▀\x1b[48;5;237m▄\x1b[48;5;234m█\x1b[48;5;237m▄\x1b[48;5;221m▄\x1b[48;5;237m▄▄▄\x1b[48;5;221m▄\x1b[48;5;237m▄\x1b[48;5;234;38;5;103m▄\x1b[49;39m  \x1b[38;5;221m▀\x1b[48;5;229m▄\x1b[38;5;229m█\x1b[48;5;221m▄\x1b[48;5;229;38;5;221m▄▄▄\x1b[38;5;229m███\x1b[48;5;221m▄\x1b[49;38;5;221m▄▄\x1b[39m\x1b[00m" << std::endl;
    std::cout << "            \x1b[48;5;103;38;5;103m█\x1b[48;5;146;38;5;146m█\x1b[48;5;103;38;5;103m█\x1b[48;5;252;38;5;252m███\x1b[48;5;103m▄\x1b[49;38;5;103m▄\x1b[39m      \x1b[48;5;103;38;5;103m█\x1b[48;5;234;38;5;146m▄\x1b[48;5;146m█\x1b[48;5;103m▄\x1b[38;5;103m█\x1b[48;5;252m▄\x1b[48;5;234;38;5;252m▄\x1b[48;5;103m▄\x1b[49;38;5;103m▄\x1b[39m   \x1b[38;5;221m▀\x1b[48;5;229m▄▄\x1b[38;5;229m█\x1b[38;5;221m▄\x1b[49m▀▀▀▀\x1b[39m  \x1b[00m" << std::endl;
    std::cout << "            \x1b[38;5;103m▀\x1b[48;5;103m██\x1b[48;5;252;38;5;252m████\x1b[48;5;103;38;5;103m█\x1b[49;39m       \x1b[48;5;103;38;5;103m█\x1b[48;5;146;38;5;146m███\x1b[48;5;103;38;5;103m█\x1b[48;5;252;38;5;252m███\x1b[48;5;103;38;5;103m█\x1b[49m▄\x1b[39m    \x1b[38;5;221m▀▀▀\x1b[39m     \x1b[00m" << std::endl;
    std::cout << "               \x1b[38;5;103m▀\x1b[48;5;252m▄\x1b[38;5;252m█\x1b[48;5;103;38;5;103m█\x1b[49;39m        \x1b[38;5;103m▀\x1b[48;5;146m▄\x1b[38;5;146m██\x1b[48;5;103m▄\x1b[48;5;252;38;5;103m▄\x1b[38;5;252m████\x1b[48;5;103;38;5;103m█\x1b[49;39m           \x1b[00m" << std::endl;
    std::cout << "                 \x1b[38;5;103m▀\x1b[39m           \x1b[38;5;103m▀▀▀▀\x1b[48;5;252m▄\x1b[38;5;252m██\x1b[38;5;103m▄\x1b[49m▀\x1b[39m           \x1b[00m" << std::endl;
    std::cout << "                                  \x1b[38;5;103m▀▀\x1b[39m \x1b[00m" << std::endl;
}

void dump(std::vector<nts::IComponent *> chipsets)
{
    for(std::vector<nts::IComponent *>::iterator it = chipsets.begin(); it != chipsets.end(); ++it )
        (*it)->Dump();
}

void simulate(std::vector<nts::IComponent *> chipsets_v)
{
    for(std::vector<nts::IComponent *>::iterator it = chipsets_v.begin(); it != chipsets_v.end(); ++it )
        if (dynamic_cast<nts::AComponent *>(*it)->getType() == nts::AComponent::Type::T)
            (*it)->Compute(0);
}

void display(std::vector<nts::IComponent *> chipsets)
{
    for(std::vector<nts::IComponent *>::iterator it = chipsets.begin(); it != chipsets.end(); ++it )
        if (dynamic_cast<nts::AComponent *>(*it)->getType() == nts::AComponent::Type::O)
        {
            std::cout << dynamic_cast<nts::AComponent *>(*it)->getName() << "=";
            nts::Tristate_dump((*it)->Compute(1));
            std::cout << std::endl;
        }
}

int launch(std::map<std::string, nts::IComponent *> chipsets_m, std::vector<nts::IComponent *> chipsets_v)
{
    std::regex rgx("^(\\S+)=(\\S+)$");
    std::smatch match;
    std::string command;
    display(chipsets_v);
    while (1)
    {
        std::cout << "> ";
        std::cin >> command;
        if (std::cin.eof() || command == "exit")
            return (0);
        else if (command == "display")
            display(chipsets_v);
        else if (command == "simulate")
            simulate(chipsets_v);
        else if (command == "loop")
            while (1)
                simulate(chipsets_v);
        else if (command == "dump")
            dump(chipsets_v);
        else if (command == "pony")
            pony();
        else if (command == "save")
            save("test", chipsets_v);
        else if (std::regex_search(command, match, rgx))
        {
            std::map<std::string, nts::IComponent *>::iterator it;
            if ((it = chipsets_m.find(match[1])) != chipsets_m.end())
            {
                if (dynamic_cast<nts::AComponent *>((*it).second)->getType() == nts::AComponent::Type::I)
                {
                    if (match[2] == "1")
                        (*it).second->Compute(2);
                    else if (match[2] == "0")
                        (*it).second->Compute(3);
                    else
                        throw Error("Invalid value.", match[2]);
                }
                else
                    throw Error("Component is not an variable input.", match[1]);
            }
            else
                throw Error("No component with this name.", match[1]);
        }
        else
            throw Error("Unknown command.", command);
    }
}